generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId         Int      @id @default(autoincrement()) @map("userId")
  email          String   @unique @db.VarChar(50)
  password       String   @db.VarChar(100)
  accountType    String   @default("standard") @db.VarChar(50)
  sToken         String   @db.VarChar(10)
  walletAddress  String   @db.VarChar(100)
  emailStatus    Boolean  @default(false)
  kycStatus      Boolean  @default(false)
  role           String   @default("USER") @db.VarChar(6)
  photo          String   @default("default.png") @db.VarChar(50)
  phone          String?  @db.VarChar(50)
  country        String?  @db.VarChar(50)
  city           String?  @db.VarChar(20)
  address        String?  @db.VarChar(50)
  zipcode        String?  @db.VarChar(10)
  dob            String?  @db.VarChar(8)
  fullname       String?  @db.VarChar(50)
  currency       String   @default("$") @db.VarChar(6)
  frontImage     String?  @db.VarChar(100)
  backImage      String?  @db.VarChar(100)
  currentTrader  String?  @default("NONE") @db.VarChar(50)
  winRate        String?  @default("NONE") @db.VarChar(50)
  tradeStatus    String?  @default("NONE") @db.VarChar(50)
  traderProfit   String?  @default("NONE") @db.VarChar(50)
  copiers       String?   @default("NONE") @db.VarChar(50)
  activePlan    String?   @default("NONE") @db.VarChar(100)
  profit         Decimal  @default(0.00) @db.Decimal(18, 2)
  deposit        Decimal  @default(0.00) @db.Decimal(18, 2)
  withdrawal     Decimal  @default(0.00) @db.Decimal(18, 2)
  bonus          Decimal  @default(0.00) @db.Decimal(18, 2)
  planAmount     Decimal  @default(0.00) @db.Decimal(18, 2)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@map("user")
}

model UserBalance {
  balanceId       Int      @id @default(autoincrement()) @map("balanceId")
  userId          Int?     @map("userId")
  coinId          Int?     @map("coinId")
  availableBalance Decimal @default(0.00) @db.Decimal(18, 2)
  onOrderBalance  Decimal  @default(0.00) @db.Decimal(18, 2)
  stakedBalance   Decimal  @default(0.00) @db.Decimal(18, 2)

  @@map("userBalance")
}

model Coin {
  coinId              Int      @id @default(autoincrement()) @map("coinId")
  coinName            String   @db.VarChar(100)
  coinTitle           String   @db.VarChar(100)
  coinRate            Decimal  @db.Decimal(10, 3)
  photo               String   @db.VarChar(200)
  withMin             String   @db.VarChar(50)
  withMax             String   @db.VarChar(50)
  withInstructions    String   @db.Text
  depositInstructions String   @db.Text
  depositAddress      String   @default("Please contact support for wallet address") @db.VarChar(100)
  percent             String   @db.VarChar(50)
  coinVisible         Boolean  @default(true)
  type                String?  @db.VarChar(50)
  createdAt           DateTime @default(now())
  updatedAt           DateTime @default(now())

  @@map("coin")
}

model CopyTrader {
  id              Int      @id @default(autoincrement())
  name            String   @db.VarChar(100)
  photo           String   @db.VarChar(255)
  noTrades        String   @db.VarChar(100)
  noCopiers       String   @db.VarChar(100)
  status          String   @db.VarChar(50)
  noWins          String   @db.VarChar(100)
  rank            String   @db.VarChar(50)
  strategyDesc    String   @db.Text
  noLoss          String   @db.VarChar(100)
  profit          String   @db.VarChar(100)
  loss            String   @db.VarChar(50)
  eDate           String   @db.VarChar(100)
  createdAt       DateTime @default(now())
  commission      String   @default("100") @db.VarChar(100)
  copyTraderVisible Boolean @default(true)

  @@map("copyTrader")
}

model News {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  content     String   @db.Text
  author      String   @db.VarChar(100)
  type        String   @db.VarChar(100)
  myLink      String?  @db.VarChar(200)
  photo       String   @db.VarChar(255)
  date        DateTime @default(now())
  newsVisible Boolean  @default(true)

  @@map("news")
}

model StakedRecord {
  id         Int      @id @default(autoincrement())
  userId     Int
  planId     Int
  title      String   @db.VarChar(100)
  apy        String   @db.VarChar(15)
  amount     Decimal  @db.Decimal(18, 8)
  startDate  DateTime @default(now())
  lockPeriod Int
  status     String?  @default("active") @db.VarChar(11)

  @@map("stakedRecord")
}

model StakingPlan {
  id                   Int      @id @default(autoincrement())
  title                String   @db.VarChar(255)
  coin                 String   @db.VarChar(100)
  apy                  String   @db.VarChar(50)
  lockPeriod           Int
  minimumAmount        Decimal  @default(0.00000000) @db.Decimal(18, 8)
  maximumAmount        String   @db.VarChar(100)
  type                 String   @default("Locked") @db.VarChar(15)
  status               String   @default("true") @db.VarChar(10)
  createdAt            DateTime @default(now())
  stakingPlanVisible   Boolean  @default(true)

  @@map("stakingPlan")
}

model Trade {
  id           Int      @id @default(autoincrement())
  volume       String   @db.VarChar(100)
  userId       String   @db.VarChar(100)
  coinId       Int
  tradeResult  String   @db.VarChar(100)
  sl           String   @db.VarChar(100)
  tp           String   @db.VarChar(100)
  type         String   @db.VarChar(100)
  symbol       String   @db.VarChar(100)
  status       String   @db.VarChar(100)
  expiredTime  String   @db.VarChar(100)
  createdAt    DateTime @default(now())
  bgat         String?  @default("0") @db.VarChar(100)
  sdat         String?  @default("0") @db.VarChar(100)
  mdat         String?  @default("0") @db.VarChar(100)
  tradeSignal  String?  @default("Processing") @db.VarChar(50)
  coinName     String?  @db.VarChar(50)

  @@map("trade")
}

model TradingPlan {
  id                   Int      @id @default(autoincrement())
  planName             String   @db.VarChar(50)
  planDes              String   @db.VarChar(100)
  minIns               String   @db.VarChar(100)
  maxIns               String   @db.VarChar(100)
  daysDuration         String   @db.VarChar(100)
  dailyInterestRate    String   @db.VarChar(100)
  status               String   @db.VarChar(50)
  tradingPlanVisible   Boolean  @default(true)

  @@map("tradingPlan")
}

model TransactionHistory {
  id             Int      @id @default(autoincrement())
  coinId         Int
  userId         String   @db.VarChar(100)
  name           String   @db.VarChar(100)
  status         String   @db.VarChar(100)
  method         String   @db.VarChar(100)
  transTime      DateTime @default(now())
  transId        String   @db.VarChar(100)
  amount         String   @db.VarChar(100)
  type           String   @db.VarChar(100)
  depositInfo    String?  @db.Text
  withdrawInfo   String?  @db.Text
  copytradeInfo  String?  @db.Text
  miningInfo     String?  @db.Text
  auto           String?  @db.VarChar(5)
  photo          String?  @db.VarChar(100)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @default(now())

  @@map("transactionHistory")
}
